name: DEV CD - Deploy to EC2

on:
  push:
    branches: [ dev ]

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev  # ✅ dev 환경의 secrets/variables 사용을 위해 필수

    steps:
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v3

      - name: SSH 키 설정
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_EC2_KEY }}" > ~/.ssh/ec2.pem
          chmod 600 ~/.ssh/ec2.pem

      - name: 저장소 이름 및 배포 경로 설정
        id: vars
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT
          echo "DEPLOY_DIR=${{ secrets.DEV_DEPLOY_PATH }}/${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 업로드
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: mumulbo/sample-service:dev

      - name: EC2에 배포 디렉토리 생성
        run: |
          ssh -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no ${{ secrets.DEV_EC2_HOST }} \
          "mkdir -p ${{ steps.vars.outputs.DEPLOY_DIR }}"

      - name: docker-compose.yml 복사
        run: |
          scp -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no docker-compose.yml \
          ${{ secrets.DEV_EC2_HOST }}:${{ steps.vars.outputs.DEPLOY_DIR }}/docker-compose.yml

      - name: .env 파일 생성
        run: |
          echo "SERVER_PORT=${{ vars.SERVER_PORT }}" > .env
          echo "DB_NAME=${{ vars.DB_NAME }}" >> .env
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
          echo "HOST_DB_PORT=${{ vars.HOST_DB_PORT }}" >> .env
          echo "CONTAINER_DB_PORT=${{ vars.CONTAINER_DB_PORT }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" >> .env

      - name: .env 파일 복사
        run: |
          scp -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no .env \
          ${{ secrets.DEV_EC2_HOST }}:${{ steps.vars.outputs.DEPLOY_DIR }}/.env

      - name: EC2에서 docker-compose 실행
        run: |
          ssh -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no ${{ secrets.DEV_EC2_HOST }} << EOF
            cd ${{ steps.vars.outputs.DEPLOY_DIR }}
            docker compose pull
            docker compose up -d
          EOF
